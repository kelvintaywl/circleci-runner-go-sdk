// Code generated by go-swagger; DO NOT EDIT.

package token

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kelvintaywl/circleci-runner-go-sdk/models"
)

// DeleteTokenReader is a Reader for the DeleteToken structure.
type DeleteTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteTokenNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteTokenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteTokenNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteTokenNoContent creates a DeleteTokenNoContent with default headers values
func NewDeleteTokenNoContent() *DeleteTokenNoContent {
	return &DeleteTokenNoContent{}
}

/*
DeleteTokenNoContent describes a response with status code 204, with default header values.

Runner token was deleted successfully.
*/
type DeleteTokenNoContent struct {
}

// IsSuccess returns true when this delete token no content response has a 2xx status code
func (o *DeleteTokenNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete token no content response has a 3xx status code
func (o *DeleteTokenNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete token no content response has a 4xx status code
func (o *DeleteTokenNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete token no content response has a 5xx status code
func (o *DeleteTokenNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete token no content response a status code equal to that given
func (o *DeleteTokenNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteTokenNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v2/runner/token/{id}][%d] deleteTokenNoContent ", 204)
}

func (o *DeleteTokenNoContent) String() string {
	return fmt.Sprintf("[DELETE /v2/runner/token/{id}][%d] deleteTokenNoContent ", 204)
}

func (o *DeleteTokenNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTokenBadRequest creates a DeleteTokenBadRequest with default headers values
func NewDeleteTokenBadRequest() *DeleteTokenBadRequest {
	return &DeleteTokenBadRequest{}
}

/*
DeleteTokenBadRequest describes a response with status code 400, with default header values.

Invalid input
*/
type DeleteTokenBadRequest struct {
	Payload *models.Errored
}

// IsSuccess returns true when this delete token bad request response has a 2xx status code
func (o *DeleteTokenBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete token bad request response has a 3xx status code
func (o *DeleteTokenBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete token bad request response has a 4xx status code
func (o *DeleteTokenBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete token bad request response has a 5xx status code
func (o *DeleteTokenBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete token bad request response a status code equal to that given
func (o *DeleteTokenBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteTokenBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v2/runner/token/{id}][%d] deleteTokenBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteTokenBadRequest) String() string {
	return fmt.Sprintf("[DELETE /v2/runner/token/{id}][%d] deleteTokenBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteTokenBadRequest) GetPayload() *models.Errored {
	return o.Payload
}

func (o *DeleteTokenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errored)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTokenNotFound creates a DeleteTokenNotFound with default headers values
func NewDeleteTokenNotFound() *DeleteTokenNotFound {
	return &DeleteTokenNotFound{}
}

/*
DeleteTokenNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteTokenNotFound struct {
	Payload *models.Errored
}

// IsSuccess returns true when this delete token not found response has a 2xx status code
func (o *DeleteTokenNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete token not found response has a 3xx status code
func (o *DeleteTokenNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete token not found response has a 4xx status code
func (o *DeleteTokenNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete token not found response has a 5xx status code
func (o *DeleteTokenNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete token not found response a status code equal to that given
func (o *DeleteTokenNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteTokenNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v2/runner/token/{id}][%d] deleteTokenNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTokenNotFound) String() string {
	return fmt.Sprintf("[DELETE /v2/runner/token/{id}][%d] deleteTokenNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTokenNotFound) GetPayload() *models.Errored {
	return o.Payload
}

func (o *DeleteTokenNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errored)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
